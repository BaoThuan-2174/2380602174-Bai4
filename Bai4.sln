using System;
using System.Windows.Forms;

namespace Bai4
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            cmbChuyenNganh.SelectedIndex = 0;  // mặc định chọn QTKD
            radNu.Checked = true;             // mặc định Nữ
            txtNam.Text = "0";
            txtNu.Text = "0";

            dataGridView1.AllowUserToAddRows = false; // ẩn dòng trống cuối
            dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
        }

        // Nút Thêm / Sửa
        private void butThemSua_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(txtMSSV.Text) || string.IsNullOrWhiteSpace(txtHoTen.Text) || string.IsNullOrWhiteSpace(txtDTB.Text))
            {
                MessageBox.Show("Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            // Kiểm tra điểm trung bình
            if (!float.TryParse(txtDTB.Text, out float dtb) || dtb < 0 || dtb > 10)
            {
                MessageBox.Show("Điểm trung bình phải là số trong khoảng 0 - 10!");
                txtDTB.Focus();
                return;
            }

            string gt = radNam.Checked ? "Nam" : "Nữ";

            // Kiểm tra trùng MSSV
            bool found = false;
            foreach (DataGridViewRow row in dataGridView1.Rows)
            {
                if (row.Cells["MSSV"].Value != null && row.Cells["MSSV"].Value.ToString() == txtMSSV.Text)
                {
                    // Cập nhật
                    row.Cells["Họ Tên"].Value = txtHoTen.Text;
                    row.Cells["Giới Tính"].Value = gt;
                    row.Cells["Điểm TB"].Value = dtb.ToString();
                    row.Cells["Chuyên Ngành"].Value = cmbChuyenNganh.Text;
                    MessageBox.Show("Cập nhật dữ liệu thành công!");
                    found = true;
                    break;
                }
            }

            if (!found)
            {
                // Thêm mới
                dataGridView1.Rows.Add(txtMSSV.Text, txtHoTen.Text, gt, dtb.ToString(), cmbChuyenNganh.Text);
                MessageBox.Show("Thêm mới dữ liệu thành công!");
            }

            UpdateCount();
        }

        // Nút Xóa
        private void button2_Click(object sender, EventArgs e)
        {
            if (dataGridView1.CurrentRow != null)
            {
                DialogResult dr = MessageBox.Show("Bạn có chắc chắn muốn xóa sinh viên này?", "Xác nhận", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (dr == DialogResult.Yes)
                {
                    dataGridView1.Rows.RemoveAt(dataGridView1.CurrentRow.Index);
                    MessageBox.Show("Xóa sinh viên thành công!");
                    UpdateCount();
                }
            }
            else
            {
                MessageBox.Show("Không tìm thấy MSSV cần xóa!");
            }
        }

        // Khi chọn 1 dòng trong DataGridView -> hiện lại thông tin lên form
        private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0)
            {
                DataGridViewRow row = dataGridView1.Rows[e.RowIndex];
                txtMSSV.Text = row.Cells["MSSV"].Value?.ToString();
                txtHoTen.Text = row.Cells["Họ Tên"].Value?.ToString();
                txtDTB.Text = row.Cells["Điểm TB"].Value?.ToString();
                cmbChuyenNganh.Text = row.Cells["Chuyên Ngành"].Value?.ToString();

                string gt = row.Cells["Giới Tính"].Value?.ToString();
                if (gt == "Nam") radNam.Checked = true;
                else radNu.Checked = true;
            }
        }

        // Cập nhật số lượng Nam / Nữ
        private void UpdateCount()
        {
            int nam = 0, nu = 0;
            foreach (DataGridViewRow row in dataGridView1.Rows)
            {
                if (row.Cells["Giới Tính"].Value != null)
                {
                    if (row.Cells["Giới Tính"].Value.ToString() == "Nam") nam++;
                    else if (row.Cells["Giới Tính"].Value.ToString() == "Nữ") nu++;
                }
            }

            txtNam.Text = nam.ToString();
            txtNu.Text = nu.ToString();
        }

        // Kiểm tra khi nhập điểm TB
        private void txtDTB_TextChanged(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(txtDTB.Text)) return;

            if (!float.TryParse(txtDTB.Text, out float diem))
            {
                MessageBox.Show("Điểm TB phải là số!", "Lỗi nhập liệu", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtDTB.Clear();
            }
            else if (diem < 0 || diem > 10)
            {
                MessageBox.Show("Điểm TB phải nằm trong khoảng 0 - 10!", "Lỗi nhập liệu", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtDTB.Clear();
            }
        }
    }
}

